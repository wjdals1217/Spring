
###################################################
# Live reload Setting 
###################################################
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false
server.servlet.context-path=/

###################################################
# DataSource Setting
###################################################
spring.datasource.url=jdbc:mysql://13.124.41.119:3306/UserDB
spring.datasource.username=userdb
spring.datasource.password=UuuS1235789@
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

####################################
# JPA Setting
####################################
spring.jpa.database=mysql
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# 대소문자 구분 설정
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#로컬 환경에서만 사용 해당하는 테이블이 있으면 drop하고 새로 만들어버림
#create: 기존테이블 삭제 후 다시 생성 (DROP + CREATE)
#create-drop: create와 같으나 종료시점에 테이블 DROP
#update: 변경분만 반영(운영DB에서는 사용하면 안됨)
#validate: 엔티티와 테이블이 정상 매핑되었는지만 확인
#none: 사용하지 않음(사실상 없는 값이지만 관례상 none이라고 한다.)
#운영 장비에서는 절대 crate, create-drop, update 사용하면 안된다.
#개발 초기 단계는 create 또는 update
#테스트 서버는 update 또는 validate
#스테이징과 운영 서버는 validate 또는 none
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

###################################################
# Logging Setting
###################################################
logging.level.root=info
logging.level.jdbc.sqlonly=info
logging.level.jdbc.sqltiming=info
logging.level.jdbc.connection=info
logging.level.jdbc.resultsettable=info
logging.level.org.hibernate=info
logging.level.org.springframework.security=debug
logging.file.name=log/Ch11.log

###################################################
# Security Setting
###################################################
spring.security.user.name= user
spring.security.user.password=1234

###################################################
# JWT Setting
# - secret key는 HS256 알고리즘으로 암호화/복호화를 하기 위해 256비트보다 커야됨
# - 영문자 하나의 알파벳은 8비트(1바이트)이므로 32글자 이상이면 됨
###################################################
jwt.issuer=wjdals1217@gmail.com
jwt.secret=NeiQUfKEg1GluVOmaVp5bB8uIri1SrOl
